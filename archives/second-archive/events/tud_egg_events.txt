namespace = dragon_event

##########################
# DRAGON HATCHING EVENTS #
##########################

dragon_event.1001 = {
	# Start Hatching
	type = character_event
	title = dragon_event.1001.t
	desc = dragon_event.1001.desc
	theme = dragon_hatched_theme
	hidden = false
	# Portrait
	left_portrait = {
		character = root
		animation = spymaster
	}	
	# Destroy Egg
	immediate = {
		destroy_dragon_egg_effect = {
			OWNER = root
		}
	}
	# What will happen?
	option = {
		name = dragon_event.1001.a
		random_list = {
			1 = {
				modifier = {
					root = {
						has_culture = culture:high_valyrian
					}
					add = 9
				}
				modifier = {
					root = {
						any_ancestor = {
							this = { has_culture = culture:high_valyrian }
						}
					}
					add = 5
				}
				# Chance of Great Dragon
				trigger_event = { id = dragon_event.1004 }
				custom_tooltip = dragon_event.tooltip1
			}
			2 = {
				modifier = {
					root = {
						has_culture = culture:high_valyrian
					}
					add = 13
				}
				modifier = {
					root = {
						any_ancestor = {
							this = { has_culture = culture:high_valyrian }
						}
					}
					add = 10
				}
				# Chance of Large Dragon
				custom_tooltip = dragon_event.tooltip2
				trigger_event = { id = dragon_event.1003 }
			}
			3 = {
				modifier = {
					root = {
						has_culture = culture:high_valyrian
					}
					add = 22
				}
				modifier = {
					root = {
						any_ancestor = {
							this = { has_culture = culture:high_valyrian }
						}
					}
					add = 15
				}
				# Chance of Nimble Dragon
				custom_tooltip = dragon_event.tooltip3
				trigger_event = { id = dragon_event.1002 }
			}
			94 = {
				custom_tooltip = dragon_event.tooltip4
				modifier = {
					root = {
						has_culture = culture:high_valyrian
					}
					add = -44
				}
				modifier = {
					root = {
						any_ancestor = {
							this = { has_culture = culture:high_valyrian }
						}
					}
					add = -20
				}
			}
		}
	}
}

dragon_event.1002 = {
	# Nimble Dragon Hatched
	type = character_event
	title = dragon_event.1002.t
	desc = dragon_event.1002.desc
	theme = dragon_hatched_theme
	hidden = false
	# Portrait
	left_portrait = {
		character = root
		animation = happiness
	}
	# Create Dragon
	immediate = {
		create_nimble_dragon_effect = {
			OWNER = root
		}
		add_character_modifier = nimble_dragon_rider_modifier
	}
	# Display Dragon
	artifact = {
		target = scope:newly_created_artifact
		position = lower_center_portrait
	}
	# Add Prestige
	option = {
		name = dragon_event.1002.a
		add_prestige = 1000
	}
}

dragon_event.1003 = {
	# Large Dragon Hatched
	type = character_event
	title = dragon_event.1003.t
	desc = dragon_event.1003.desc
	theme = dragon_hatched_theme
	hidden = false
	# Portrait
	left_portrait = {
		character = root
		animation = happiness
	}
	# Create Dragon
	immediate = {
		create_large_dragon_effect = {
			OWNER = root
		}
		add_character_modifier = large_dragon_rider_modifier
	}
	# Display Dragon
	artifact = {
		target = scope:newly_created_artifact
		position = lower_center_portrait
	}
	# Add Prestige
	option = {
		name = dragon_event.1003.a
		add_prestige = 2000
	}
}

dragon_event.1004 = {
	# Great Dragon Hatched
	type = character_event
	title = dragon_event.1004.t
	desc = dragon_event.1004.desc
	theme = dragon_hatched_theme
	hidden = false
	# Portrait
	left_portrait = {
		character = root
		animation = happiness
	}
	# Create Dragon
	immediate = {
		create_great_dragon_effect = {
			OWNER = root
		}
		add_character_modifier = great_dragon_rider_modifier
	}
	# Display Dragon
	artifact = { # To display the artifact in the event-window
		target = scope:newly_created_artifact
		position = lower_center_portrait
	}
	# Add Prestige
	option = {
		name = dragon_event.1004.a
		add_prestige = 3000
	}
}

###########################
# DRAGON COMMANDER EVENTS #
###########################

dragon_event.2001 = {
	# Burn Province
	type = character_event
	title = dragon_event.2001.t
	desc = dragon_event.2001.desc
	theme = battle
	override_background = { reference = burning_building }
	# Save Location Scopes
	immediate = {
		ROOT.location.county = {save_scope_as = burned_county}
		ROOT.location.county.holder = {save_scope_as = burned_holder}
	}
	# Portraits
	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:burned_holder
		animation = fear
		triggered_animation = {
			trigger = {
				ai_vengefulness >= medium_positive_ai_value
				ai_boldness > high_negative_ai_value
			}
			animation = rage
		}
	}
	# Burn
	option = {
		name = dragon_event.2001.a
		stress_impact = {
			just = major_stress_impact_gain
			forgiving = medium_stress_impact_gain
			compassionate = major_stress_impact_gain
			craven = major_stress_impact_gain
			sadistic = major_stress_impact_loss
			fire_obsessed = minor_stress_impact_loss
		}
		add_dread = minor_dread_gain
		scope:burned_holder = {
			every_close_family_member = {
				custom = dragon_sieged_family_custom
				limit = {
					is_close_family_or_spouse_of_root_trigger = no
					NOT = { this = root }
				}
				add_opinion = {
					target = root
					modifier = dragon_sieged_family
				}
			}
			add_opinion = {
				target = root
				modifier = dragon_sieged_me
			}
		}
		scope:burned_county = {
			add_county_modifier = {
				modifier = dragon_siege_modifier
				years = 5
			}
		}
	}
	# Don't Burn
	option = {
		name = dragon_event.2001.b
	}
}

#############################
# DRAGON INTERACTION EVENTS #
#############################

dragon_event.3001 = {
	# Start
	type = character_event
	title = dragon_event.3001.t
	desc = dragon_event.3001.desc
	theme = claim_throne_scheme
	override_background = {
		reference = battlefield
	}
	# Portraits
	left_portrait = {
		character = root
		animation = angry
	}
	left_portrait = {
		character = scope:claimant
		animation = marshal
	}
	# Option
	option = { 
		name = dragon_event.3001.a
	}
}

dragon_event.3002 = {
	# Start
	type = character_event
	title = dragon_event.3002.t
	desc = dragon_event.3002.desc
	theme = claim_throne_scheme
	override_background = {
		reference = battlefield
	}
	# Portraits
	left_portrait = {
		character = scope:target
		animation = angry
	}
	left_portrait = {
		character = scope:claimant
		animation = marshal
	}
	# Option
	option = { 
		name = dragon_event.3002.a
	}
}

dragon_event.3004 = {
	# Start
	type = character_event
	title = dragon_event.3004.t
	desc = {
		desc = dragon_event.3004.desc1
		desc = dragon_event.3004.desc2
	}
	theme = claim_throne_scheme
	override_background = {
		reference = battlefield
	}
	# Portraits
	left_portrait = {
		character = root
		animation = marshal
	}
	# Options
	option = {
		name = dragon_event.3004.a
		scope:target = {
			add_opinion = {
				target = root
				modifier = dragonlord_claimed_my_title
			}
			every_close_family_member = {
				custom = dragonlord_claimed_family
				limit = {
					is_close_family_or_spouse_of_root_trigger = no
					NOT = { this = scope:claimant }
				}
				add_opinion = {
					target = scope:claimant
					modifier = dragonlord_claimed_my_liege
				}
			}
		}
		add_character_modifier = {
			custom = dragonlord_custom
			modifier = dragonlord_modifier
			years = 5
		}
	}
}

dragon_event.3005 = {
	# Start
	type = character_event
	title = dragon_event.3005.t
	desc = {
		desc = dragon_event.3005.desc1
		desc = dragon_event.3005.desc2
		desc = dragon_event.3005.desc3
	}
	theme = claim_throne_scheme
	override_background = {
		reference = battlefield
	}
	# Portraits
	left_portrait = {
		character = root
		animation = marshal
	}
	# Options
	option = {
		name = dragon_event.3005.a
		give_nickname = nick_the_dragonlord
		scope:target = {
			add_opinion = {
				target = root
				modifier = dragonlord_claimed_my_title
			}
			every_close_family_member = {
				custom = dragonlord_claimed_family
				limit = {
					is_close_family_or_spouse_of_root_trigger = no
					NOT = { this = scope:claimant }
				}
				add_opinion = {
					target = scope:claimant
					modifier = dragonlord_claimed_my_liege
				}
			}
		}
		add_character_modifier = {
			custom = dragonlord_custom
			modifier = dragonlord_modifier
			years = 5
		}
	}
}

############################
# DRAGON CHECK NEST EVENT #
############################

dragon_event.4001 = {
	# Go To Nest
	type = character_event
	title = dragon_event.4001.t
	desc = dragon_event.4001.desc
	theme = dragon_nest_theme
	# For Light
	left_portrait = {
		character = root
		animation = lantern
	}
	# Egg Or Nothing
	option = {
		name = dragon_event.4001.a
		random_list = {
			50 = {
				get_random_dragon_egg_artifact = {
					OWNER = ROOT
					GIVER = ROOT
				}
			}
			50 = {
				root = {
					add_prestige = -200
				}
			}
		}
	}
}